name: Build LaTeX to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build HTML/PDF with Pandoc (Docker)
        uses: addnab/docker-run-action@v3
        with:
          image: pandoc/latex:latest
          options: -v ${{ github.workspace }}:/data
          run: |
            set -eu
            cd /data

            rm -rf _public
            mkdir -p _public
            cp -f styles.css _public/ || true

            # Build each course (folder/*/src)
            for d in */src ; do
              [ -d "$d" ] || continue
              course="${d%/src}"
              echo "Building course: $course"

              mkdir -p "$course/site"
              cp -f styles.css "$course/site/" || true

              # Build all .tex files
              for f in "$d"/*.tex ; do
                [ -e "$f" ] || continue
                base="$(basename "$f" .tex)"
                echo "  - $f -> $course/site/${base}.html"
                pandoc "$f" \
                  --from=latex \
                  --to=html5 \
                  --mathjax \
                  --template /data/_template.html \
                  --toc --number-sections \
                  -o "$course/site/${base}.html"

                # Optional PDF (keep or remove)
                pandoc "$f" -o "$course/site/${base}.pdf" || true
              done

              # Course index: plain list of built pages
              if [ -f "$course/src/main.tex" ]; then
                pandoc "$course/src/main.tex" \
                  --from=latex --to=html5 --mathjax \
                  --template /data/_template.html \
                  --toc --number-sections \
                  -o "$course/site/index.html"
              else
                {
                  printf '%s\n' '<!doctype html><html><head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>'"$course"'</title><link rel="stylesheet" href="styles.css"></head><body>'
                  printf '%s\n' '<h1>'"$course"'</h1><ul>'
                  for h in "$course/site/"*.html ; do
                    [ -e "$h" ] || continue
                    file="$(basename "$h")"
                    [ "$file" = "index.html" ] && continue
                    name="${file%.html}"
                    printf '<li><a href="%s">%s</a> (<a href="%s.pdf">pdf</a>)</li>\n' "$file" "$name" "$name"
                  done
                  printf '%s\n' '</ul></body></html>'
                } > "$course/site/index.html"
              fi

              mkdir -p "_public/$course"
              cp -R "$course/site/." "_public/$course/"
            done

            # Root landing page listing courses from the artifact
            {
              printf '%s\n' '<!doctype html><html><head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>Notes</title><link rel="stylesheet" href="styles.css"></head><body>'
              printf '%s\n' '<h1>Course Notes</h1><ul>'
              for c in _public/* ; do
                [ -d "$c" ] || continue
                name="$(basename "$c")"
                printf '<li><a href="%s/">%s</a></li>\n' "$name" "$name"
              done
              printf '%s\n' '</ul></body></html>'
            } > "_public/index.html"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

